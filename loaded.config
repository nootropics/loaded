#!/bin/sh


# there are no spaces allowed in the assignment
# e.g. "VIP4=127.0.0.1" is OK but "VIP4 = 127.0.0.1" is not OK
# VIP4 string must not contain quotes or so, only pure IP address

# change the below to fit your needs :)

VIP4=192.168.0.11		# virtual IP
VIP4net=24			# virtual IP netbits
NS=192.168.0.1			# nameserver traffic not balanced!

FIRST_CORE=1			# if multicore, which is the first core to use?
				# core 0 usually has enough to do with NIC interrupts
LAST_CORE=3

RIP4=10.0.0.0/8		# real IP net
public_NIC=eth0		# interface to outside
private_NIC=eth0	# interface to real servers
private_GW=10.0.0.254/8	# gateway for real servers

nfq_len=1000000		# number of max queued packets in kernel

# IPs of real servers
# server4 string must not contain quotes or so, only pure IP address

server4=10.0.0.1	# first IPv4 balanced server
server4=10.0.0.2	# second IPv4 balanced server
server4=10.0.0.3	# ...


# which strategy to use for balancing
# choose "rr" for round robin (default) or "weighted"
# weighted has more overhead than rr
strategy=rr
broadcast=10.255.255.255

# which port to test for living service
# port 80 is default
port_alive=80

# in which intervall (in seconds) the 2nd loaded thread
# should look for dead or added backends
# default is 30
# Only takes effect if you start loaded with -f
check_cycle=30


# Not enabled by default. Remove comment to enable.
#failover

###############################################################################
#
# Now, some script stuff which you probably dont need to change
#
#

#modprobe ip_queue || true
modprobe nfnetlink_queue || true


iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT

iptables -F
iptables -F -t mangle
iptables -F -t nat

ip6tables -F -t mangle
ip6tables -F

iptables -t mangle -A PREROUTING -d $NS -p udp --dport 53 -j ACCEPT
iptables -t mangle -A PREROUTING -s $NS -p udp --sport 53 -j ACCEPT
iptables -t mangle -A PREROUTING -d $VIP4 -j NFQUEUE --queue-balance $FIRST_CORE:$LAST_CORE
iptables -A FORWARD -d $NS -p udp --dport 53 -j ACCEPT
iptables -A FORWARD -s $RIP4 -j NFQUEUE --queue-balance $FIRST_CORE:$LAST_CORE
iptables -t nat -A POSTROUTING -s $RIP4 -d $NS -o $public_NIC -p udp --dport 53 -j MASQUERADE

#this rule is for testing if $RIP4 is on the same host as loaded
#iptables -A OUTPUT -s $RIP4 -j NFQUEUE --queue-balance $FIRST_CORE:$LAST_CORE


ip addr flush dev $private_NIC || true
ip addr flush dev $public_NIC || true
ip addr add $VIP4/$VIP4net dev $public_NIC 2>/dev/null || true
ip addr add $private_GW broadcast $broadcast dev $private_NIC 2>/dev/null || true
ip route add $RIP4 dev $private_NIC 2>/dev/null || true

ip link set up dev $public_NIC 2>/dev/null || true
ip link set up dev $private_NIC 2>/dev/null || true

# do not answer to our own broadcast pings
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

for i in $public_NIC $private_NIC "all" "default"; do
	echo 0 > /proc/sys/net/ipv4/conf/$i/send_redirects
done

echo 1 > /proc/sys/net/ipv4/ip_forward

